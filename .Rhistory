for (j in 1:length(type)) {
for (i in v1){
filein = listFile[j]
if(filein == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(type)){
filein = listFile[j]
if(filein == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(type)){
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
v5 = c("Backbone","ChaineLat")
v6 = 1:6039
sort.res
sort.res
matrice3PR1 <- matrix(0, nrow=length(v5), ncol=length(v2))
rownames(matrice3PR1) <- v5
colnames(matrice3PR1) <- sort.res
matrice3PR1
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp_packCryst.pdb","1hih_packCryst.pdb","1hii_packCryst.pdb","1hiv_packCryst.pdb","1hpv_packCryst.pdb","1hsh_packCryst.pdb","1hsi_packCryst.pdb","1ivp_packCryst.pdb","1sdt_packCryst.pdb","2hb3_packCryst.pdb","2hb4_packCryst.pdb","2hpe_packCryst.pdb","2hpf_packCryst.pdb","2ien_packCryst.pdb","2mip_packCryst.pdb","2nph_packCryst.pdb","2z4o_packCryst.pdb","3ebz_packCryst.pdb","3ec0_packCryst.pdb","3ecg_packCryst.pdb","3ekv_packCryst.pdb","3nu3_packCryst.pdb","3phv_packCryst.pdb","3s45_packCryst.pdb","4hla_packCryst.pdb","4ll3_packCryst.pdb")
ind.PR1 = names(which(type == "PR1"))
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(type)){
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(ind.PR1)){
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn2 = c()
for (j in v1){
for (i in 1:length(ind.PR1)) {
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
names(listAtomSyn) = listAtomSyn2
sort.res
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3PR1[1,sort.res[j]] = matrice3PR1[1,sort.res[j]] + 1
}else{
matrice3PR1[2,sort.res[j]] = matrice3PR1[2,sort.res[j]] + 1
}
}
}
}
v5 = c("Backbone","ChaineLat")
v6 = 1:3589
sort.res
sort.res
matrice3PR1 <- matrix(0, nrow=length(v5), ncol=length(v2))
rownames(matrice3PR1) <- v5
colnames(matrice3PR1) <- sort.res
matrice3PR1
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp_packCryst.pdb","1hih_packCryst.pdb","1hii_packCryst.pdb","1hiv_packCryst.pdb","1hpv_packCryst.pdb","1hsh_packCryst.pdb","1hsi_packCryst.pdb","1ivp_packCryst.pdb","1sdt_packCryst.pdb","2hb3_packCryst.pdb","2hb4_packCryst.pdb","2hpe_packCryst.pdb","2hpf_packCryst.pdb","2ien_packCryst.pdb","2mip_packCryst.pdb","2nph_packCryst.pdb","2z4o_packCryst.pdb","3ebz_packCryst.pdb","3ec0_packCryst.pdb","3ecg_packCryst.pdb","3ekv_packCryst.pdb","3nu3_packCryst.pdb","3phv_packCryst.pdb","3s45_packCryst.pdb","4hla_packCryst.pdb","4ll3_packCryst.pdb")
ind.PR1 = names(which(type == "PR1"))
ind.PR1 = names(which(type == "PR1"))
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(ind.PR1)){
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn2 = c()
for (j in v1){
for (i in 1:length(ind.PR1)) {
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
names(listAtomSyn) = listAtomSyn2
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3PR1[1,sort.res[j]] = matrice3PR1[1,sort.res[j]] + 1
}else{
matrice3PR1[2,sort.res[j]] = matrice3PR1[2,sort.res[j]] + 1
}
}
}
}
matrice3PR1
v5 = c("Backbone","ChaineLat")
v6 = 1:3589
sort.res
matrice3PR2 <- matrix(0, nrow=length(v5), ncol=length(v2))
rownames(matrice3PR2) <- v5
colnames(matrice3PR2) <- sort.res
matrice3PR2
matrice3PR2
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp_packCryst.pdb","1hih_packCryst.pdb","1hii_packCryst.pdb","1hiv_packCryst.pdb","1hpv_packCryst.pdb","1hsh_packCryst.pdb","1hsi_packCryst.pdb","1ivp_packCryst.pdb","1sdt_packCryst.pdb","2hb3_packCryst.pdb","2hb4_packCryst.pdb","2hpe_packCryst.pdb","2hpf_packCryst.pdb","2ien_packCryst.pdb","2mip_packCryst.pdb","2nph_packCryst.pdb","2z4o_packCryst.pdb","3ebz_packCryst.pdb","3ec0_packCryst.pdb","3ecg_packCryst.pdb","3ekv_packCryst.pdb","3nu3_packCryst.pdb","3phv_packCryst.pdb","3s45_packCryst.pdb","4hla_packCryst.pdb","4ll3_packCryst.pdb")
ind.PR2 = names(which(type == "PR2"))
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(ind.PR2)){
filein = listFile[j]
if((filein) == (ind.PR2[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn2 = c()
for (j in v1){
for (i in 1:length(ind.PR2)) {
filein = listFile[j]
if((filein) == (ind.PR2[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
names(listAtomSyn) = listAtomSyn2
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3PR2[1,sort.res[j]] = matrice3PR2[1,sort.res[j]] + 1
}else{
matrice3PR2[2,sort.res[j]] = matrice3PR2[2,sort.res[j]] + 1
}
}
}
}
v6 = 1:2450
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3PR2[1,sort.res[j]] = matrice3PR2[1,sort.res[j]] + 1
}else{
matrice3PR2[2,sort.res[j]] = matrice3PR2[2,sort.res[j]] + 1
}
}
}
}
matrice3PR2
matricetotale = matrice3PR1 + matrice3PR2
matricetotale
v5 = c("Backbone","ChaineLat")
v6 = 1:6039
sort.res
sort.res
matrice3 <- matrix(0, nrow=length(v5), ncol=length(v2))
matrice3 <- matrix(0, nrow=length(v5), ncol=length(v2))
rownames(matrice3) <- v5
matrice3 <- matrix(0, nrow=length(v5), ncol=length(v2))
rownames(matrice3) <- v5
colnames(matrice3) <- sort.res
matrice3
listAtomSyn = c()
for (i in v1){
filein = listFile[i]
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
listAtomSyn2 = c()
for (i in v1){
filein = listFile[i]
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
names(listAtomSyn) = listAtomSyn2
sort.res
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3[1,sort.res[j]] = matrice3[1,sort.res[j]] + 1
}else{
matrice3[2,sort.res[j]] = matrice3[2,sort.res[j]] + 1
}
}
}
}
matrice3
listFile = dir("fileByProt3/")
filein = listFile[1]
M = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = unique(paste(as.character(M[,6]), as.character(M[,5]), sep="_"))
listAtomSyn = listAtom
listAtomSyn
v1 =(1:26)
v2 =(1:159)
for (i in v1){
filein = listFile[i]
M = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = unique(paste(as.character(M[,6]), as.character(M[,5]), sep="_"))
listAtomSyn = unique(c(listAtom,listAtomSyn))
}
listAtomSyn
v3 = c("1hhp","1hih","1hii","1hiv","1hpv","1hsh","1hsi","1ivp","1sdt","2hb3","2hb4","2hpe","2hpf","2ien","2mip","2nph","2z4o","3ebz","3ec0","3ecg","3ekv","3nu3","3phv","3s45","4hla","4ll3")
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp","1hih","1hii","1hiv","1hpv","1hsh","1hsi","1ivp","1sdt","2hb3","2hb4","2hpe","2hpf","2ien","2mip","2nph","2z4o","3ebz","3ec0","3ecg","3ekv","3nu3","3phv","3s45","4hla","4ll3")
matrice <- matrix(0, nrow=length(v3), ncol=length(listAtomSyn))
rownames(matrice) <- v3
colnames(matrice) <- listAtomSyn
for (i in 1:length(v1)) {
filein = listFile[i]
M = read.table(paste("fileByProt3",filein,sep="/"))
Atome <- unique(c(paste(as.character(M[,6]), as.character(M[,5]), sep="_")))
for (j in 1:length(v2)) {
for (y in 1:length(Atome)) {
if ((listAtomSyn[j]) == (Atome[y])){
matrice[i,j] = 1
}
}
}
}
residue = colnames(matrice)
resA = residue[grep("_A", residue)]
resA_ssA = as.numeric(gsub("_A","", resA))
resA_ssA = as.numeric(gsub("_A","", resA))
names(resA_ssA) = resA
sort.resA = names(sort(resA_ssA))
resB = residue[grep("_B", residue)]
resB = residue[grep("_B", residue)]
resB_ssB = as.numeric(gsub("_B","", resB))
names(resB_ssB) = resB
sort.resB = names(sort(resB_ssB))
sort.res = c(sort.resA, sort.resB)
matrice.sort = matrice[,sort.res]
matrice  = matrice.sort
matrice
library(pheatmap)
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matrice)
pheatmap(matrice[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
v4 = c("NbStructinPC","NbStructinPC.PR1","NbStructinPC.PR2")
matriceStruct <- matrix(0, nrow=length(v4), ncol=length(listAtomSyn))
rownames(matriceStruct) <- v4
colnames(matriceStruct) <- sort.res
for (i in 1:length(v2)){
y = 0
for (j in 1:length(v3)) {
if (matrice[j,i] == 1){
y = y+1
matriceStruct[1,i] = y
}
}
}
matriceStruct
sommeStruct = apply(matriceStruct,1,sum)
sommeStructPC.PR1 = sommeStruct[1]
moyennePC = (sommeStructPC)/(length(NbStructinPC))
a = 0
for (i in 1:length(NbStructinPC)) {
a = a + ((NbStructinPC[i] - moyennePC)*(NbStructinPC[i] - moyennePC))
}
ecarttypePC = sqrt(a/(length(NbStructinPC)))
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp","1hih","1hii","1hiv","1hpv","1hsh","1hsi","1ivp","1sdt","2hb3","2hb4","2hpe","2hpf","2ien","2mip","2nph","2z4o","3ebz","3ec0","3ecg","3ekv","3nu3","3phv","3s45","4hla","4ll3")
##version courte
NbStructinPC = apply(matrice,2,sum)
ind.PR2 = names(which(type == "PR2"))
NbStructinPC.PR2 = apply(matrice[ind.PR2,],2,sum)
ind.PR1 = names(which(type == "PR1"))
NbStructinPC.PR1 = apply(matrice[ind.PR1,],2,sum)
matriceStruct = rbind(NbStructinPC,NbStructinPC.PR1,NbStructinPC.PR2)
matriceStruct
sommeStruct = apply(matriceStruct,1,sum)
sommeStruct = apply(matriceStruct,1,sum)
sommeStructPC.PR1 = sommeStruct[2]
moyennePC.PR1 = (sommeStructPC.PR1)/(length(NbStructinPC.PR1))
a = 0
for (i in 1:length(NbStructinPC.PR1)) {
a = a + ((NbStructinPC.PR1[i] - moyennePC.PR1)*(NbStructinPC.PR1[i] - moyennePC.PR1))
}
ecarttypePC.PR1 = sqrt(a/(length(NbStructinPC.PR1)))
sommeStruct = apply(matriceStruct,1,sum)
sommeStructPC.PR2 = sommeStruct[3]
moyennePC.PR2 = (sommeStructPC.PR2)/(length(NbStructinPC.PR2))
a = 0
for (i in 1:length(NbStructinPC.PR2)) {
a = a + ((NbStructinPC.PR2[i] - moyennePC.PR2)*(NbStructinPC.PR2[i] - moyennePC.PR2))
}
ecarttypePC.PR2 = sqrt(a/(length(NbStructinPC.PR2)))
v5 = c("Backbone","ChaineLat")
v6 = 1:6039
sort.res
matrice3 <- matrix(0, nrow=length(v5), ncol=length(v2))
rownames(matrice3) <- v5
colnames(matrice3) <- sort.res
matrice3
listAtomSyn = c()
for (i in v1){
filein = listFile[i]
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
listAtomSyn2 = c()
for (i in v1){
filein = listFile[i]
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
names(listAtomSyn) = listAtomSyn2
sort.res
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3[1,sort.res[j]] = matrice3[1,sort.res[j]] + 1
}else{
matrice3[2,sort.res[j]] = matrice3[2,sort.res[j]] + 1
}
}
}
}
matrice3
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(ind.PR1)){
filein = listFile[j]
N = read.table(paste("fileByProt3",filein,sep="/"))
if((filein) == (ind.PR1[i])){
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn2 = c()
listAtomSyn2 = c()
for (j in v1){
for (i in 1:length(ind.PR1)) {
filein = listFile[j]
N = read.table(paste("fileByProt3",filein,sep="/"))
if((filein) == (ind.PR1[i])){
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
for (j in v1){
for (i in 1:length(ind.PR1)) {
filein = listFile[j]
N = read.table(paste("fileByProt3",filein,sep="/"))
if((filein) == (ind.PR1[i])){
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
names(listAtomSyn) = listAtomSyn2
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3PR1[1,sort.res[j]] = matrice3PR1[1,sort.res[j]] + 1
}else{
matrice3PR1[2,sort.res[j]] = matrice3PR1[2,sort.res[j]] + 1
}
}
}
}
listAtomSyn2 = c()
for (j in v1){
filein = listFile[j]
N = read.table(paste("fileByProt3",filein,sep="/"))
for (i in 1:length(ind.PR1)) {
if((filein) == (ind.PR1[i])){
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
v5 = c("Backbone","ChaineLat")
v6 = 1:3589
sort.res
sort.res
matrice3PR1 <- matrix(0, nrow=length(v5), ncol=length(v2))
rownames(matrice3PR1) <- v5
colnames(matrice3PR1) <- sort.res
matrice3PR1
matrice3PR1
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp_packCryst.pdb","1hih_packCryst.pdb","1hii_packCryst.pdb","1hiv_packCryst.pdb","1hpv_packCryst.pdb","1hsh_packCryst.pdb","1hsi_packCryst.pdb","1ivp_packCryst.pdb","1sdt_packCryst.pdb","2hb3_packCryst.pdb","2hb4_packCryst.pdb","2hpe_packCryst.pdb","2hpf_packCryst.pdb","2ien_packCryst.pdb","2mip_packCryst.pdb","2nph_packCryst.pdb","2z4o_packCryst.pdb","3ebz_packCryst.pdb","3ec0_packCryst.pdb","3ecg_packCryst.pdb","3ekv_packCryst.pdb","3nu3_packCryst.pdb","3phv_packCryst.pdb","3s45_packCryst.pdb","4hla_packCryst.pdb","4ll3_packCryst.pdb")
ind.PR1 = names(which(type == "PR1"))
listAtomSyn = c()
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(ind.PR1)){
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn = c()
for (j in v1) {
for (i in 1:length(ind.PR1)){
filein = listFile[j]
N = read.table(paste("fileByProt3",filein,sep="/"))
if((filein) == (ind.PR1[i])){
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn2 = c()
for (j in v1){
for (i in 1:length(ind.PR1)) {
filein = listFile[j]
if((filein) == (ind.PR1[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
names(listAtomSyn) = listAtomSyn2
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3PR1[1,sort.res[j]] = matrice3PR1[1,sort.res[j]] + 1
}else{
matrice3PR1[2,sort.res[j]] = matrice3PR1[2,sort.res[j]] + 1
}
}
}
}
matrice3PR1
listAtomSyn2 = c()
for (j in v1){
for (i in 1:length(ind.PR1)) {
filein = listFile[j]
N = read.table(paste("fileByProt3",filein,sep="/"))
if((filein) == (ind.PR1[i])){
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
for (j in 1:length(sort.res)) {
for (k in 1:length(v6)) {
if (sort.res[j] == listAtomSyn[k]){
if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
matrice3PR1[1,sort.res[j]] = matrice3PR1[1,sort.res[j]] + 1
}else{
matrice3PR1[2,sort.res[j]] = matrice3PR1[2,sort.res[j]] + 1
}
}
}
}
matrice3PR1
list.bk = c("C","O","N","CA")
