}
matrice3PR2
matricetotale = matrice3PR1 + matrice3PR2
pheatmap(matrice3PR2, cluster_cols = FALSE, cluster_rows = FALSE, breaks = c(-1, 10, 20, 50, 70, 100), col = c("white", "wheat", "yellow", "orange", "red"))
list.bk = c("C","O","N","CA")
Proteases = c("1hhp","1hih","1hii","1hiv","1hpv","1hsh","1hsi","1ivp","1sdt","2hb3","2hb4","2hpe","2hpf","2ien","2mip","2nph","2z4o","3ebz","3ec0","3ecg","3ekv","3nu3","3phv","3s45","4hla","4ll3")
matriceBackBonePR <- matrix(0, nrow=length(Proteases), ncol=length(NbResidues))
rownames(matriceBackBonePR) <- Proteases
colnames(matriceBackBonePR) <- sort.res
matriceChaineLatPR <- matrix(0, nrow=length(Proteases), ncol=length(NbResidues))
rownames(matriceChaineLatPR) <- Proteases
colnames(matriceChaineLatPR) <- sort.res
NbAtomeinPC = c(1:length(listAtomSyn2))
names(listAtomSyn) = listAtomSyn2
for (i in 1:length(Proteases)) {
listAtomSyn = NULL
listAtomSyn2 = NULL
filein = listFile[i]
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtomSyn = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn2 = (paste(as.character(N[,3])))
for (k in 1:length(listAtomSyn)) {
for (j in 1:length(sort.res)) {
if (listAtomSyn[k] == sort.res[j]){
if (is.element(listAtomSyn2[k], list.bk)==TRUE){
matriceBackBonePR[Proteases[i],sort.res[j]] = 1
}else{
matriceChaineLatPR[Proteases[i],sort.res[j]] = 1
}
}
}
}
}
matriceBackBonePR
matriceChaineLatPR
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceBackBonePR)
pheatmap(matriceBackBonePR[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceChaineLatPR)
pheatmap(matriceChaineLatPR[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
ProtPR1 = c("1hhp","1hih","1hiv","1hpv","1sdt", "2hb3","2hb4","2ien","2nph","2z4o","3ekv","3nu3","3phv","4hla","4ll3")
list.bk = c("C","O","N","CA")
matriceBackBonePR1 <- matrix(0, nrow=length(ProtPR1), ncol=length(NbResidues))
rownames(matriceBackBonePR1) <- ProtPR1
colnames(matriceBackBonePR1) <- sort.res
matriceChaineLatPR1 <- matrix(0, nrow=length(ProtPR1), ncol=length(NbResidues))
rownames(matriceChaineLatPR1) <- ProtPR1
colnames(matriceChaineLatPR1) <- sort.res
NbAtomeinPC = c(1:length(listAtomSyn2))
names(listAtomSyn) = listAtomSyn2
for (i in 1:length(ind.PR1)) {
listAtomSyn = NULL
listAtomSyn2 = NULL
filein = ind.PR1[i]
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtomSyn = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn2 = (paste(as.character(N[,3])))
for (k in 1:length(listAtomSyn)) {
for (j in 1:length(sort.res)) {
if (listAtomSyn[k] == sort.res[j]){
if (is.element(listAtomSyn2[k], list.bk)==TRUE){
matriceBackBonePR1[ProtPR1[i],sort.res[j]] = 1
}else{
matriceChaineLatPR1[ProtPR1[i],sort.res[j]] = 1
}
}
}
}
}
matriceBackBonePR1
matriceChaineLatPR1
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceBackBonePR1)
pheatmap(matriceBackBonePR1[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceChaineLatPR1)
pheatmap(matriceChaineLatPR1[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
ProtPR2 = c("1hii","1hsh","1hsi","1ivp","2hpe","2hpf","2mip","3ebz","3ec0","3ecg","3s45")
list.bk = c("C","O","N","CA")
matriceBackBonePR2 <- matrix(0, nrow=length(ProtPR2), ncol=length(NbResidues))
rownames(matriceBackBonePR2) <- ProtPR2
colnames(matriceBackBonePR2) <- sort.res
matriceChaineLatPR2 <- matrix(0, nrow=length(ProtPR2), ncol=length(NbResidues))
rownames(matriceChaineLatPR2) <- ProtPR2
colnames(matriceChaineLatPR2) <- sort.res
NbAtomeinPC = c(1:length(listAtomSyn2))
names(listAtomSyn) = listAtomSyn2
for (i in 1:length(ind.PR2)) {
listAtomSyn = NULL
listAtomSyn2 = NULL
filein = ind.PR2[i]
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtomSyn = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn2 = (paste(as.character(N[,3])))
for (k in 1:length(listAtomSyn)) {
for (j in 1:length(sort.res)) {
if (listAtomSyn[k] == sort.res[j]){
if (is.element(listAtomSyn2[k], list.bk)==TRUE){
matriceBackBonePR2[ProtPR2[i],sort.res[j]] = 1
}else{
matriceChaineLatPR2[ProtPR2[i],sort.res[j]] = 1
}
}
}
}
}
matriceBackBonePR2
matriceChaineLatPR2
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceBackBonePR2)
pheatmap(matriceBackBonePR2[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceChaineLatPR2)
pheatmap(matriceChaineLatPR2[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
"1_A"  "2_A"  "3_A"  "4_A"  "5_A"       5
region.file <- read.table("description_regions.csv", sep=",")
res = 4
as.character(region.file[4,2])
region.file <- read.table("description_regions.csv", sep=",")
as.character(region.file[4,2])
sort.res
matrice3PR <- matrix(0, nrow=length(Proteases), ncol=length(Region2))
rownames(matrice3PR) <- Proteases
region.file
region.file <- read.table("description_regions.csv", sep=",")
region.file
region.file
View(region.file)
ResidueTotaux = c("1_A","2_A","3_A","4_A","5_A","6_A","7_A","8_A","9_A","10_A","11_A","12_A","13_A","14_A","15_A","16_A","17_A","18_A","19_A","20_A","21_A","22_A","23_A","24_A","25_A","26_A","27_A","28_A","29_A","30_A","31_A","32_A","33_A","34_A","35_A","36_A","37_A","38_A","39_A","40_A","41_A","42_A","43_A","44_A","45_A","46_A","47_A", "48_A", "49_A", "50_A", "51_A", "52_A", "53_A", "54_A", "55_A", "56_A", "57_A", "58_A", "59_A", "60_A", "61_A","62_A", "63_A","64_A", "65_A", "66_A", "67_A", "68_A","69_A", "70_A", "71_A", "72_A", "73_A", "74_A","75_A","76_A","77_A", "78_A", "79_A", "80_A", "81_A", "82_A", "83_A","84_A","85_A","86_A","87_A", "88_A", "89_A", "90_A", "91_A", "92_A", "93_A", "94_A", "95_A","96_A", "97_A", "98_A", "99_A", "1_B", "2_B", "3_B", "4_B","5_B","6_B","7_B","8_B","9_B","10_B", "11_B", "12_B", "13_B", "14_B","15_B", "16_B", "17_B", "18_B", "19_B","20_B","21_B","22_B","23_B","24_B","25_B","26_B","27_B","28_B", "29_B", "30_B" ,"31_B","32_B","33_B", "34_B", "35_B" ,"36_B", "37_B", "38_B", "39_B" ,"40_B", "41_B", "42_B", "43_B", "44_B", "45_B", "46_B", "47_B", "48_B", "49_B","50_B", "51_B", "52_B", "53_B", "54_B", "55_B", "56_B" ,"57_B", "58_B", "59_B", "60_B" ,"61_B", "62_B", "63_B","64_B", "65_B","66_B", "67_B" ,"68_B", "69_B", "70_B", "71_B","72_B", "73_B", "74_B","75_B", "76_B","77_B", "78_B", "79_B", "80_B", "81_B", "82_B", "83_B","84_B","85_B","86_B", "87_B", "88_B","89_B","90_B", "91_B", "92_B","93_B", "94_B", "95_B", "96_B","97_B", "98_B", "99_B")
region.file = region.file + region.file
region.file
region.file <- read.table("description_regions.csv", sep=",")
as.character(region.file[4,2])
region.file <- read.table("description_regions.csv", sep=",")
as.character(region.file[4,2])
for (i in length(ResidueTotaux)) {
region = (paste(as.character(region.file[,1]), as.character(ResidueTotaux[1,]), sep="_"))
regionSyn = (c(region,regionSyn))
}
region.file <- read.table("description_regions.csv", sep=",")
as.character(region.file[4,2])
for (i in length(ResidueTotaux)) {
region = (paste(as.character(region.file[,1]), as.character(ResidueTotaux[1,]), sep="_"))
regionSyn = (c(region,regionSyn))
}
region = (paste(as.character(region.file[,1]), as.character(ResidueTotaux[1,]), sep="_"))
regionSyn = (c(region,regionSyn))
regionV = (paste(as.character(region.file[,1]))
regionV = (paste(as.character(region.file[,1])))
regionV = (paste(as.character(region.file[,1])))
regionV
regionV = (paste(as.character(region.file[,2])))
regionV
region = (paste(regionV, as.character(ResidueTotaux[1,]), sep="_"))
regionV = regionV + regionV
regionV = (paste(as.character(region.file[,2])))
regionI = regionV + regionV
regionV = (paste(as.character(region.file[,2]),as.character(region.file[,2])))
regionV
region.file <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
region = (paste(as.character(region.file[,1]), as.character(ResidueTotaux[1,]), sep="_"))
regionSyn = (c(region,regionSyn))
regionV
region.file <- read.table("description_regions.csv", sep=",") + read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
regionV = (paste(as.character(region.file[,2])))
regionV
region.file <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
regionV
for (i in length(ResidueTotaux)) {
regionV[i+99]=regionV[i]
}
regionV
ResidueTotaux = c("1_A","2_A","3_A","4_A","5_A","6_A","7_A","8_A","9_A","10_A","11_A","12_A","13_A","14_A","15_A","16_A","17_A","18_A","19_A","20_A","21_A","22_A","23_A","24_A","25_A","26_A","27_A","28_A","29_A","30_A","31_A","32_A","33_A","34_A","35_A","36_A","37_A","38_A","39_A","40_A","41_A","42_A","43_A","44_A","45_A","46_A","47_A", "48_A", "49_A", "50_A", "51_A", "52_A", "53_A", "54_A", "55_A", "56_A", "57_A", "58_A", "59_A", "60_A", "61_A","62_A", "63_A","64_A", "65_A", "66_A", "67_A", "68_A","69_A", "70_A", "71_A", "72_A", "73_A", "74_A","75_A","76_A","77_A", "78_A", "79_A", "80_A", "81_A", "82_A", "83_A","84_A","85_A","86_A","87_A", "88_A", "89_A", "90_A", "91_A", "92_A", "93_A", "94_A", "95_A","96_A", "97_A", "98_A", "99_A", "1_B", "2_B", "3_B", "4_B","5_B","6_B","7_B","8_B","9_B","10_B", "11_B", "12_B", "13_B", "14_B","15_B", "16_B", "17_B", "18_B", "19_B","20_B","21_B","22_B","23_B","24_B","25_B","26_B","27_B","28_B", "29_B", "30_B" ,"31_B","32_B","33_B", "34_B", "35_B" ,"36_B", "37_B", "38_B", "39_B" ,"40_B", "41_B", "42_B", "43_B", "44_B", "45_B", "46_B", "47_B", "48_B", "49_B","50_B", "51_B", "52_B", "53_B", "54_B", "55_B", "56_B" ,"57_B", "58_B", "59_B", "60_B" ,"61_B", "62_B", "63_B","64_B", "65_B","66_B", "67_B" ,"68_B", "69_B", "70_B", "71_B","72_B", "73_B", "74_B","75_B", "76_B","77_B", "78_B", "79_B", "80_B", "81_B", "82_B", "83_B","84_B","85_B","86_B", "87_B", "88_B","89_B","90_B", "91_B", "92_B","93_B", "94_B", "95_B", "96_B","97_B", "98_B", "99_B")
region.file <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
for (i in length(ResidueTotaux)) {
regionV[i+99]=regionV[i]
}
region.file <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
for (i in 1:99) {
regionV[i+99]=regionV[i]
}
region = (paste(as.character(region.file[,1]), as.character(ResidueTotaux[1,]), sep="_"))
region = (paste(region.file[,1], ResidueTotaux[1,]), sep="_")
regionfile <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
for (i in 1:99) {
regionV[i+99]=regionV[i]
}
region = (paste(regionfile[,1], ResidueTotaux[1,]), sep="_")
region = (paste(as.character(regionfile[,1]),as.character(ResidueTotaux[1,])) sep="_")
region = (paste(as.character(regionfile[,1]),as.character(ResidueTotaux[1,])),  sep="_")
for (i in length(ResidueTotaux)) {
region = (paste(as.character(regionfile[i,1]),as.character(ResidueTotaux[1,i]),  sep="_"))
regionSyn = (c(region,regionSyn))
}
for (i in length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[1,i]),  sep="_"))
regionSyn = (c(region,regionSyn))
}
for (i in length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn = (c(region,regionSyn))
}
regionSyn = NULL
for (i in length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn = (c(region,regionSyn))
}
regionSyn
for (i in length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn = (c(regionV,regionSyn))
}
regionSyn
regionV
regionSyn = NULL
regionfile <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
for (i in 1:99) {
regionV[i+99]=regionV[i]
}
regionSyn = NULL
for (i in length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn = (c(region,regionSyn))
}
regionSyn
for (i in length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn[i] = region
}
regionSyn
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
region
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
region
for (i in 1:length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn[i] = region
}
regionSyn
regionfile <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
regionV
RegionPacking = c("dimer1A","R1A","fulcrumA","catalyticA","R2A","elbowA","flapsA","cantileverA","R3A","wallA","R4A","alpha-helixA","dimer2A","dimer1B","R1B","fulcrumB","catalyticB","R2B","elbowB","flapsB","cantileverB","R3B","wallB","R4B","alpha-helixB","dimer2B")
ResidueTotaux = c("1_A","2_A","3_A","4_A","5_A","6_A","7_A","8_A","9_A","10_A","11_A","12_A","13_A","14_A","15_A","16_A","17_A","18_A","19_A","20_A","21_A","22_A","23_A","24_A","25_A","26_A","27_A","28_A","29_A","30_A","31_A","32_A","33_A","34_A","35_A","36_A","37_A","38_A","39_A","40_A","41_A","42_A","43_A","44_A","45_A","46_A","47_A", "48_A", "49_A", "50_A", "51_A", "52_A", "53_A", "54_A", "55_A", "56_A", "57_A", "58_A", "59_A", "60_A", "61_A","62_A", "63_A","64_A", "65_A", "66_A", "67_A", "68_A","69_A", "70_A", "71_A", "72_A", "73_A", "74_A","75_A","76_A","77_A", "78_A", "79_A", "80_A", "81_A", "82_A", "83_A","84_A","85_A","86_A","87_A", "88_A", "89_A", "90_A", "91_A", "92_A", "93_A", "94_A", "95_A","96_A", "97_A", "98_A", "99_A", "1_B", "2_B", "3_B", "4_B","5_B","6_B","7_B","8_B","9_B","10_B", "11_B", "12_B", "13_B", "14_B","15_B", "16_B", "17_B", "18_B", "19_B","20_B","21_B","22_B","23_B","24_B","25_B","26_B","27_B","28_B", "29_B", "30_B" ,"31_B","32_B","33_B", "34_B", "35_B" ,"36_B", "37_B", "38_B", "39_B" ,"40_B", "41_B", "42_B", "43_B", "44_B", "45_B", "46_B", "47_B", "48_B", "49_B","50_B", "51_B", "52_B", "53_B", "54_B", "55_B", "56_B" ,"57_B", "58_B", "59_B", "60_B" ,"61_B", "62_B", "63_B","64_B", "65_B","66_B", "67_B" ,"68_B", "69_B", "70_B", "71_B","72_B", "73_B", "74_B","75_B", "76_B","77_B", "78_B", "79_B", "80_B", "81_B", "82_B", "83_B","84_B","85_B","86_B", "87_B", "88_B","89_B","90_B", "91_B", "92_B","93_B", "94_B", "95_B", "96_B","97_B", "98_B", "99_B")
regionfile <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
for (i in 1:99) {
regionV[i+99]=regionV[i]
}
regionSyn = NULL
for (i in 1:length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn[i] = region
}
regionSyn
profvis::profvis({for (i in 1:99) {
regionV[i+99]=regionV[i]
}})
library(pheatmap)
pheatmap::pheatmap(matriceChaineLatPR2)
pheatmap(matriceChaineLatPR2[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceBackBonePR2)
pheatmap(matriceBackBonePR2[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceChaineLatPR2)
pheatmap(matriceChaineLatPR2[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceBackBonePR1)
pheatmap(matriceBackBonePR1[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceChaineLatPR1)
pheatmap(matriceChaineLatPR1[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceBackBonePR)
pheatmap(matriceBackBonePR[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
library(pheatmap)
?pheatmap
pheatmap::pheatmap(matriceChaineLatPR)
pheatmap(matriceChaineLatPR[-27:-29,], cluster_rows = TRUE, cluster_cols = FALSE, br=-1:1, col=c("white", "red"))
resSelA <- gsub("_A", "", colnames(matrice)[grep("_A", colnames(matrice))])
resSel2A <- paste(resSelA, collapse="+")
paste("select respackA, resid ", resSel2A,  " and chain A", sep="")
resSelB <- gsub("_B", "", colnames(matrice)[grep("_B", colnames(matrice))])
resSel2B <- paste(resSelB, collapse="+")
paste("select respackB, resid ", resSel2B,  " and chain B", sep="")
?gsub
resSel_A_PR1 <- gsub("_A", "", which(colnames(matrice)[grep("_A", colnames(matrice))]),type[rownames(matrice)] == "PR1")
resSel_A_PR1 <- gsub("_A", "", which(type[rownames(matrice)] == "PR1",colnames(matrice)[grep("_A", colnames(matrice))]))
?which
resSel_A_PR1 <- gsub("_A", "", colnames(matrice)[which(type[rownames(matrice)] == "PR1",grep("_A", colnames(matrice))]))
resSel_A_PR1 <- gsub("_A", "", colnames(matrice)[which(type[rownames(matrice)] == "PR1",grep("_A", colnames(matrice)))])
resSel2_A_PR1 <- paste(resSel_A_PR1, collapse="+")
paste("select respackA, resid ", resSel2_A_PR1,  " and chain A", sep="")
resSelA <- gsub("_A", "", colnames(matrice)[grep("_A", colnames(matrice))])
resSel2A <- paste(resSelA, collapse="+")
paste("select respackA, resid ", resSel2A,  " and chain A", sep="")
resSelB <- gsub("_B", "", colnames(matrice)[grep("_B", colnames(matrice))])
resSel2B <- paste(1,resSelB, collapse="+")
paste("select respackB, resid ", resSel2B,  " and chain B", sep="")
resSelA <- gsub("_A", "", colnames(matrice)[grep("_A", colnames(matrice))])
resSel2A <- paste(resSelA, collapse="+")
paste("select respackA, resid ", resSel2A,  " and chain A", sep="")
resSelB <- gsub("_B", "", colnames(matrice)[grep("_B", colnames(matrice))])
resSel2B <- paste(resSelB, collapse="+")
paste("select respackB, resid ", resSel2B,  " and chain B", sep="")
MatricePR1 <- matrix(0, nrow=length(ProtPR1), ncol=length(NbResidues))
rownames(MatricePR1) <- ProtPR1
colnames(MatricePR1) <- sort.res
for (i in 1:length(NbResidues)){
y = 0
for (j in 1:length(ProtPR1)) {
if ((matrice[j,i] == 1) && (type[rownames(matrice)[j]] == "PR1")){
y = y+1
}
MatricePR1[2,i] = y
}
}
for (i in 1:length(NbResidues)){
y = 0
for (j in 1:length(ProtPR1)) {
if ((matrice[j,i] == 1) && (type[rownames(matrice)[j]] == "PR1")){
y = 1
}
MatricePR1[2,i] = y
}
}
for (i in 1:length(NbResidues)){
y = 0
for (j in 1:length(ProtPR1)) {
if ((matrice[j,i] == 1) && (type[rownames(matrice)[j,]] == "PR1")){
y = 1
}
MatricePR1[2,i] = y
}
}
for (i in 1:length(NbResidues)){
y = 0
for (j in 1:length(ProtPR1)) {
if ((matrice[j,i] == 1) && (type[rownames(matrice)[j]] == "PR1")){
y = 1
}
MatricePR1[2,i] = y
}
}
for (i in 1:length(NbResidues)){
y = 0
for (j in 1:length(Proteases[1:26])) {
if ((matrice[j,i] == 1) && (type[rownames(matrice)[j]] == "PR1")){
y = y+1
}
matriceStruct[2,i] = y
}
}
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp","1hih","1hii","1hiv","1hpv","1hsh","1hsi","1ivp","1sdt","2hb3","2hb4","2hpe","2hpf","2ien","2mip","2nph","2z4o","3ebz","3ec0","3ecg","3ekv","3nu3","3phv","3s45","4hla","4ll3")
##version courte
NbStructinPC = apply(matrice,2,sum)
ind.PR2 = names(which(type == "PR2"))
NbStructinPC.PR2 = apply(matrice[ind.PR2,],2,sum)
ind.PR1 = names(which(type == "PR1"))
NbStructinPC.PR1 = apply(matrice[ind.PR1,],2,sum)
matriceStruct = rbind(NbStructinPC,NbStructinPC.PR1,NbStructinPC.PR2)
for (i in 1:length(NbResidues)){
y = 0
for (j in 1:length(Proteases[1:26])) {
if ((matrice[j,i] == 1) && (type[rownames(matrice)[j]] == "PR1")){
y = y+1
}
matriceStruct[2,i] = y
}
}
type = c("PR1","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR2","PR1","PR2","PR1","PR1","PR2","PR2","PR2","PR1","PR1","PR1","PR2","PR1","PR1")
names(type) =c("1hhp","1hih","1hii","1hiv","1hpv","1hsh","1hsi","1ivp","1sdt","2hb3","2hb4","2hpe","2hpf","2ien","2mip","2nph","2z4o","3ebz","3ec0","3ecg","3ekv","3nu3","3phv","3s45","4hla","4ll3")
MatricePR1 <- matrix(0, nrow=length(ProtPR1), ncol=length(NbResidues))
rownames(MatricePR1) <- ProtPR1
colnames(MatricePR1) <- sort.res
MatricePR1
MatricePR1
for (i in 1:length(NbResidues)){
y = 0
for (j in 1:length(ProtPR1)) {
if ((matrice[j,i] == 1) && (type[rownames(matrice)[j]] == "PR1")){
y = 1
}
MatricePR1[2,i] = y
}
}
MatricePR1
RegionPacking = c("dimer1A","R1A","fulcrumA","catalyticA","R2A","elbowA","flapsA","cantileverA","R3A","wallA","R4A","alpha-helixA","dimer2A","dimer1B","R1B","fulcrumB","catalyticB","R2B","elbowB","flapsB","cantileverB","R3B","wallB","R4B","alpha-helixB","dimer2B")
ResidueTotaux = c("1_A","2_A","3_A","4_A","5_A","6_A","7_A","8_A","9_A","10_A","11_A","12_A","13_A","14_A","15_A","16_A","17_A","18_A","19_A","20_A","21_A","22_A","23_A","24_A","25_A","26_A","27_A","28_A","29_A","30_A","31_A","32_A","33_A","34_A","35_A","36_A","37_A","38_A","39_A","40_A","41_A","42_A","43_A","44_A","45_A","46_A","47_A", "48_A", "49_A", "50_A", "51_A", "52_A", "53_A", "54_A", "55_A", "56_A", "57_A", "58_A", "59_A", "60_A", "61_A","62_A", "63_A","64_A", "65_A", "66_A", "67_A", "68_A","69_A", "70_A", "71_A", "72_A", "73_A", "74_A","75_A","76_A","77_A", "78_A", "79_A", "80_A", "81_A", "82_A", "83_A","84_A","85_A","86_A","87_A", "88_A", "89_A", "90_A", "91_A", "92_A", "93_A", "94_A", "95_A","96_A", "97_A", "98_A", "99_A", "1_B", "2_B", "3_B", "4_B","5_B","6_B","7_B","8_B","9_B","10_B", "11_B", "12_B", "13_B", "14_B","15_B", "16_B", "17_B", "18_B", "19_B","20_B","21_B","22_B","23_B","24_B","25_B","26_B","27_B","28_B", "29_B", "30_B" ,"31_B","32_B","33_B", "34_B", "35_B" ,"36_B", "37_B", "38_B", "39_B" ,"40_B", "41_B", "42_B", "43_B", "44_B", "45_B", "46_B", "47_B", "48_B", "49_B","50_B", "51_B", "52_B", "53_B", "54_B", "55_B", "56_B" ,"57_B", "58_B", "59_B", "60_B" ,"61_B", "62_B", "63_B","64_B", "65_B","66_B", "67_B" ,"68_B", "69_B", "70_B", "71_B","72_B", "73_B", "74_B","75_B", "76_B","77_B", "78_B", "79_B", "80_B", "81_B", "82_B", "83_B","84_B","85_B","86_B", "87_B", "88_B","89_B","90_B", "91_B", "92_B","93_B", "94_B", "95_B", "96_B","97_B", "98_B", "99_B")
regionfile <- read.table("description_regions.csv", sep=",")
regionV = (paste(as.character(region.file[,2])))
for (i in 1:99) {
regionV[i+99]=regionV[i]
}
regionSyn = NULL
for (i in 1:length(ResidueTotaux)) {
region = (paste(as.character(regionV[i]),as.character(ResidueTotaux[i]),  sep="_"))
regionSyn[i] = region
}
regionSyn
matrice3PR <- matrix(0,nrow=length(Proteases),ncol=length(RegionPacking))
colnames(matrice3PR) <- RegionPacking
listAtomSyn = c()
listAtomSyn = c()
for (j in 1:length(NbProt)) {
for (i in 1:length(ind.PR2)){
filein = listFile[j]
if((filein) == (ind.PR2[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn2 = c()
for (j in NbProt){
for (i in 1:length(ind.PR2)) {
filein = listFile[j]
if((filein) == (ind.PR2[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
list.bk = c("C","CA","N","O")
names(listAtomSyn) = listAtomSyn2
for (j in 1:length(Region2)) {
for (k in 1:length(NbAtomeinPC.2)) {
if (sort.res[j] == listAtomSyn[k]){
if (is.element(listAtomSyn2[k], list.bk)==TRUE){
matrice3PR[1,sort.res[j]] = matrice3PR[1,sort.res[j]] + 1
}
}
}
}
region.file <- read.table("description_regions.csv", sep=",")
as.character(region.file[4,2])
listAtom = unique(paste(as.character(M[,6]), as.character(M[,5]), sep="_"))
listAtomSyn = unique(c(listAtom,listAtomSyn))
matrice3PR2 <- matrix(0, nrow=length(Proteases), ncol=length(NbResidues))
rownames(matrice3PR2) <- Proteases
colnames(matrice3PR2) <- sort.res
listAtomSyn = c()
for (j in NbProt) {
for (i in 1:length(ind.PR2)){
filein = listFile[j]
if((filein) == (ind.PR2[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,6]), as.character(N[,5]), sep="_"))
listAtomSyn = (c(listAtom,listAtomSyn))
}
}
}
listAtomSyn2 = c()
for (j in NbProt){
for (i in 1:length(ind.PR2)) {
filein = listFile[j]
if((filein) == (ind.PR2[i])){
N = read.table(paste("fileByProt3",filein,sep="/"))
listAtom = (paste(as.character(N[,3])))
listAtomSyn2 = (c(listAtom,listAtomSyn2))
}
}
}
list.bk = c("C","CA","N","O")
names(listAtomSyn) = listAtomSyn2
for (j in 1:length(sort.res)) {
for (k in 1:length(NbAtomeinPC.2)) {
if (sort.res[j] == listAtomSyn[k]){
#if ((((listAtomSyn2)[k]) =="C") || (((listAtomSyn2)[k]) == "CA") || (((listAtomSyn2)[k]) == "O") || (((listAtomSyn2)[k]) == "N")){
if (is.element(listAtomSyn2[k], list.bk)==TRUE){
matrice3PR2[1,sort.res[j]] = matrice3PR2[1,sort.res[j]] + 1
}else{
matrice3PR2[2,sort.res[j]] = matrice3PR2[2,sort.res[j]] + 1
}
}
}
}
list.bk = c("C","CA","N","O")
names(listAtomSyn) = listAtomSyn2
for (j in 1:length(RegionPacking)) {
for (k in 1:length(NbAtomeinPC.2)) {
if (sort.res[j] == listAtomSyn[k]){
if (is.element(listAtomSyn2[k], list.bk)==TRUE){
matrice3PR[1,sort.res[j]] = matrice3PR[1,sort.res[j]] + 1
}
}
}
}
names(ResidueTotaux) = regionSyn
